# Generated by Django 5.2.4 on 2025-08-11 15:29

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(unique=True, verbose_name='Ник')),
                ('image', models.ImageField(blank=True, null=True, upload_to='users_images', verbose_name='Аватар')),
                ('phone_number', models.CharField(error_messages={'unique': 'Пользователь с таким именем уже существует!!!'}, max_length=12, unique=True, verbose_name='Номер телефона')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('email', models.EmailField(blank=True, default='', max_length=254, null=True)),
                ('count_comments', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='Колличество комментариев может оставить')),
                ('telegram_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('telegram_username', models.CharField(blank=True, max_length=32, null=True)),
                ('telegram_photo_url', models.URLField(blank=True, null=True)),
                ('edit_name', models.BooleanField(default=True, verbose_name='Изменять имя?')),
                ('edit_username', models.BooleanField(default=True, verbose_name='Изменять имя пользователя?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователя',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
